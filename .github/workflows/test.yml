name: test-all
on:
  push:
    branches-ignore:
      - 'dependabot/**' #avoid duplicates: only run the PR, not the commit
    tags-ignore:
      - 'v*' #avoids rerun existing commit on release
  pull_request:
    branches:
      - 'main'
  workflow_dispatch: #allow manual run
  
permissions:
  contents: read
  packages: write

jobs:
  test-java:
    runs-on: ubuntu-latest
    #defaults:
    #  run:
    #    working-directory: java
    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v3
      - name: Select Java Version
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
      - name: Build and test
        run: mvn test -Dmaven.test.failure.ignore=true -U --no-transfer-progress

  publish-java-snapshot:
    #avoid publishing PRs and dependabot branches
    #if: ${{ github.event_name != 'pull_request' && !contains('/head/refs/dependabot/', github.ref) }}
    runs-on: ubuntu-latest
    #defaults:
    #  run:
    #    working-directory: java
    #env:
    #  BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
    steps:
      # NOTE1: If package to delete does not exist this action will fail:
      # First time that a package is published `delete-old-versions`, must be set to false
      # NOTE2: deploy args use the profile `publish-github` that specifies the github repository server (see pom.xml)
      - uses: javiertuya/branch-snapshots-action@main
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}
          java-version: '8'
          mvn-deploy-args: '-P publish-github -DskipTests=true -Dmaven.test.failure.ignore=true -U --no-transfer-progress'
          package-name: 'giis.branch-snapshots'
          delete-old-versions: true
          min-versions-to-keep: 4
